/******************************************************************************/
/***           Generated by IBExpert 2006.03.07 6/6/2006 14:17:36           ***/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES NONE;

CREATE DATABASE 'FTNB:C:\Futtura\SistemasD7\Vikal\Data\INTTEGRA.FTT'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 4096
DEFAULT CHARACTER SET NONE;



/******************************************************************************/
/***                                Domains                                 ***/
/******************************************************************************/

CREATE DOMAIN BAIRRO AS
VARCHAR(50);

CREATE DOMAIN CEP AS
VARCHAR(10);

CREATE DOMAIN CIDADE AS
VARCHAR(50);

CREATE DOMAIN CNPJ AS
VARCHAR(20);

CREATE DOMAIN CODIGO AS
INTEGER;

CREATE DOMAIN CPF AS
VARCHAR(15);

CREATE DOMAIN DOM_MEMO AS
BLOB SUB_TYPE 1 SEGMENT SIZE 80 CHARACTER SET ISO8859_1;

CREATE DOMAIN ENDERECO AS
VARCHAR(100);

CREATE DOMAIN IE AS
VARCHAR(20);

CREATE DOMAIN LEITURA AS
NUMERIC(15,2);

CREATE DOMAIN NOME AS
VARCHAR(80);

CREATE DOMAIN OBS AS
BLOB SUB_TYPE 1 SEGMENT SIZE 80;

CREATE DOMAIN RG AS
VARCHAR(10);

CREATE DOMAIN TELEFONE AS
VARCHAR(15);

CREATE DOMAIN TIPO AS
SMALLINT
DEFAULT 0;

CREATE DOMAIN UF AS
VARCHAR(2);

CREATE DOMAIN VALOR AS
NUMERIC(9,2);



/******************************************************************************/
/***                               Generators                               ***/
/******************************************************************************/

CREATE GENERATOR COD_CLIENTES;
CREATE GENERATOR COD_CONTA;
CREATE GENERATOR COD_FLUXO;
CREATE GENERATOR COD_FLUXO_CAIXA;
CREATE GENERATOR COD_FORNECEDOR;
CREATE GENERATOR COD_FORNECEDORES;
CREATE GENERATOR COD_FUNCIONARIO;
CREATE GENERATOR COD_FUNCIONARIOS;
CREATE GENERATOR COD_GRUPO;
CREATE GENERATOR COD_INSTRUCAO;
CREATE GENERATOR COD_NOTAFISCAL;
CREATE GENERATOR COD_NOTAFISCAL_ENTRADA;
CREATE GENERATOR COD_OPERACOES;
CREATE GENERATOR COD_ORCAMENTO;
CREATE GENERATOR COD_PONTO;
CREATE GENERATOR COD_PORTADORES;
CREATE GENERATOR COD_PRODUTO;
CREATE GENERATOR COD_TANQUE;
CREATE GENERATOR COD_TRANSPORTADORA;
CREATE GENERATOR COD_TURNO;
CREATE GENERATOR COD_VENDA;
CREATE GENERATOR COD_VENDEDORES;
CREATE GENERATOR GEN_COMPRAS_ID;
CREATE GENERATOR GEN_ORCAMENTOS_ID;
CREATE GENERATOR GEN_ORDEM_SERVICO_ID;
CREATE GENERATOR GEN_TABELA_MARGEM_ID;


SET TERM ^ ; 



/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/

CREATE PROCEDURE CRIAR_INVENTARIO (
    PMES SMALLINT,
    PANO SMALLINT)
AS
BEGIN
  EXIT;
END^


CREATE PROCEDURE INSERE_COMPRAS (
    PCOD_FORN INTEGER,
    PCOD_FUNC INTEGER,
    PCOD_NOTAF INTEGER,
    PDATA DATE,
    PSUB_TOTAL NUMERIC(9,2),
    PDESCO NUMERIC(9,2),
    PACRES NUMERIC(9,2),
    PTOTAL NUMERIC(9,2),
    PCOD_COMPRADOR INTEGER,
    PFORMA_PAG VARCHAR(20),
    POBS BLOB SUB_TYPE 1 SEGMENT SIZE 80)
RETURNS (
    RCODIGO INTEGER)
AS
BEGIN
  EXIT;
END^


CREATE PROCEDURE INSERE_NOTA_FISCAL (
    PCOD_CLI_FOR INTEGER,
    PSAIDA SMALLINT,
    PCFOP VARCHAR(25),
    PNATUREZA VARCHAR(50),
    PDATA_EM TIMESTAMP,
    PHORA_EM TIMESTAMP,
    PDATA_SA_EN TIMESTAMP,
    PHORA_SAIDA TIMESTAMP,
    PVLR_ISS FLOAT,
    PPERC_ISS FLOAT,
    PVLR_SERV FLOAT,
    PBC_ICMS FLOAT,
    PVLR_ICMS FLOAT,
    PBC_ICMS_ST FLOAT,
    PVLR_ICMS_ST FLOAT,
    PVLR_PROD NUMERIC(9,2),
    PVLR_FRETE FLOAT,
    PVLR_SEGURO FLOAT,
    POUTRAS_DESP FLOAT,
    PVLR_IPI FLOAT,
    PVLR_IRPJ FLOAT,
    PAL_IRPJ NUMERIC(9,2),
    PVLR_NOTA NUMERIC(9,2),
    POBS_CORPO BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    POBS_RODAPE BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    PCOD_TRANSP INTEGER,
    PFRETE_PC SMALLINT,
    PPLACA_VEIC VARCHAR(20),
    PUF_VEIC VARCHAR(2),
    PCOD_VENDEDOR INTEGER,
    PPESO_BRUTO FLOAT,
    PPESO_LIQ FLOAT,
    PQTDE FLOAT,
    PESPECIE VARCHAR(50),
    PMARCA VARCHAR(50),
    PNUMERO VARCHAR(50))
RETURNS (
    RCODIGO INTEGER)
AS
BEGIN
  EXIT;
END^


CREATE PROCEDURE INSERE_NOTA_FISCAL_ENTRADA (
    PCOD_FOR INTEGER,
    PDATA_EM DATE,
    PHORA_EM TIME,
    PDATA_SA_EN DATE,
    PHORA_SAIDA TIME,
    PVLR_ISS FLOAT,
    PPERC_ISS FLOAT,
    PIE_DEST FLOAT,
    PVLR_SERV FLOAT,
    PVLR_PROD NUMERIC(9,2),
    PVLR_NOTA NUMERIC(9,2),
    PAL_IRPJ NUMERIC(9,2),
    PVLR_IRPJ FLOAT,
    PCARTA_CORR INTEGER,
    PCANCELADA SMALLINT,
    PVALOR_SERV NUMERIC(9,2),
    PBC_ICMS NUMERIC(9,2),
    PVLR_ICMS NUMERIC(9,2),
    PBC_ICMS_ST NUMERIC(9,2),
    PVLR_ICMS_ST NUMERIC(9,2),
    PVLR_FRETE NUMERIC(9,2),
    PVLR_SEGURO NUMERIC(9,2),
    POUTRAS_DESP NUMERIC(9,2),
    PVLR_IPI NUMERIC(9,2),
    PCFOP VARCHAR(25),
    PNO_NOTA_FISCAL VARCHAR(10))
RETURNS (
    RCODIGO INTEGER)
AS
BEGIN
  EXIT;
END^


CREATE PROCEDURE INSERE_ORCAMENTOS (
    PTIPO SMALLINT,
    PCOD_CLI INTEGER,
    PCOD_FORN INTEGER,
    PCOD_FUNC INTEGER,
    PCOD_VEND INTEGER,
    PCOD_VENDA INTEGER,
    PDATA DATE,
    PSUB_TOTAL NUMERIC(9,2),
    PDESCO NUMERIC(9,2),
    PACRES NUMERIC(9,2),
    PTOTAL NUMERIC(9,2),
    POBS BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    PVALIDADE VARCHAR(50),
    PCONDICAO VARCHAR(50),
    PFRETE VARCHAR(50))
RETURNS (
    RCODIGO INTEGER)
AS
BEGIN
  EXIT;
END^


CREATE PROCEDURE INSERE_VENDA (
    PCOD_CLI INTEGER,
    PDATA TIMESTAMP,
    PSUB_TOT NUMERIC(9,2),
    PDESCO NUMERIC(9,2),
    PACRES NUMERIC(9,2),
    PTOTAL NUMERIC(9,2),
    PCOD_FUNC INTEGER,
    PCOD_VEND INTEGER,
    PCUPOM_ECF INTEGER,
    PTIPO SMALLINT,
    PFORMA_PAG SMALLINT,
    PTOTAL_CUSTO NUMERIC(9,2),
    POBS BLOB SUB_TYPE 1 SEGMENT SIZE 80)
RETURNS (
    RCODIGO INTEGER)
AS
BEGIN
  EXIT;
END^



SET TERM ; ^


/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE CFOP (
    CFCOD   VARCHAR(5) NOT NULL,
    CFNOME  VARCHAR(250),
    CFNOTA  DOM_MEMO
);

CREATE TABLE CLIENTES (
    COD                   INTEGER NOT NULL,
    NOME                  NOME,
    ENDERECO              ENDERECO,
    COMPLEMENTO           VARCHAR(20),
    BAIRRO                VARCHAR(30),
    CIDADE                VARCHAR(50),
    CEP                   CEP,
    UF                    VARCHAR(2),
    NASC                  VARCHAR(10),
    CPF                   CPF,
    CNPJ                  CNPJ,
    IE                    IE,
    TEL1                  TELEFONE,
    TEL2                  TELEFONE,
    TEL3                  TELEFONE,
    DESCONTO              NUMERIC(8,2),
    VENCIMENTO            VARCHAR(2),
    OBS                   BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    END_COB               VARCHAR(100),
    BAIRR0_COB            VARCHAR(50),
    CIDADE_COB            VARCHAR(50),
    UF_COB                VARCHAR(50),
    CEP_COB               VARCHAR(50),
    END_ENT               VARCHAR(100),
    BAIRR0_ENT            VARCHAR(50),
    CIDADE_ENT            VARCHAR(50),
    UF_ENT                VARCHAR(50),
    CEP_ENT               VARCHAR(50),
    DATA_CAD              TIMESTAMP DEFAULT 'NOW',
    TEL_FAX               TELEFONE,
    EMAIL                 VARCHAR(100),
    CONTATO               VARCHAR(50),
    COD_VENDEDOR          INTEGER,
    COD_TRANSP            INTEGER default 0,
    REF_COMERCIAL         VARCHAR(50),
    TEL_REF_COMERCIAL     TELEFONE,
    REF_BANCARIA          VARCHAR(50),
    TEL_REF_BANCARIA      TELEFONE,
    NOME_PAI              VARCHAR(50),
    NOME_MAE              VARCHAR(50),
    NOME_SOCIO1           VARCHAR(50),
    NOME_SOCIO2           VARCHAR(50),
    NOME_CONJUGE          VARCHAR(50),
    DATA_ABERT            DATE,
    RAMO_ATIV             VARCHAR(50),
    STATUS                SMALLINT DEFAULT '1',
    NUM_CC                SMALLINT DEFAULT 0,
    ESTADO_CIV            VARCHAR(30),
    RG                    VARCHAR(15),
    VALOR_HAVER           NUMERIC(8,2),
    DIA_VENC              INTEGER DEFAULT 30,
    DESC_GASOLINA         NUMERIC(5,2) DEFAULT 0,
    DESC_ALCOOL           NUMERIC(5,2) DEFAULT 0,
    DESC_DIESEL           NUMERIC(5,2) DEFAULT 0,
    DESC_GNV              NUMERIC(5,2) DEFAULT 0,
    DESC_OUTROS           NUMERIC(5,2) DEFAULT 0,
    PRECO_PROMO           SMALLINT DEFAULT 0,
    PRECO_PROMO_GASOLINA  NUMERIC(5,3) DEFAULT 0,
    PRECO_PROMO_ALCOOL    NUMERIC(5,3) DEFAULT 0,
    PRECO_PROMO_DIESEL    NUMERIC(5,3) DEFAULT 0,
    PRECO_PROMO_GNV       NUMERIC(5,3) DEFAULT 0,
    FIS_JUR               TIPO,
    TIPO_PRECO            TIPO,
    TIPO_CONTA            TIPO
);

CREATE TABLE COMPRAS (
    COD            INTEGER NOT NULL,
    COD_FORN       INTEGER DEFAULT 0,
    COD_FUNC       INTEGER,
    COD_NOTAF      INTEGER,
    DATA           DATE,
    SUB_TOTAL      NUMERIC(9,2) DEFAULT 0,
    DESCO          NUMERIC(9,2) DEFAULT 0,
    ACRES          NUMERIC(9,2) DEFAULT 0,
    TOTAL          NUMERIC(9,2) DEFAULT 0,
    OBS            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    COD_COMPRADOR  INTEGER,
    FORMA_PAG      VARCHAR(20)
);

CREATE TABLE COMPRAS_ITENS (
    COD_COMPRA  INTEGER NOT NULL,
    NUM_SEQ     INTEGER,
    QTDE        NUMERIC(9,3) DEFAULT 0,
    VALOR_U     NUMERIC(9,4) DEFAULT 0,
    VALOR_T     NUMERIC(9,2) DEFAULT 0,
    TIPO        VARCHAR(1) default 'P',
    COD_PROD    VARCHAR(50) DEFAULT 0,
    ICMS        NUMERIC(9,3),
    ISS         NUMERIC(9,3),
    DESCONTO    NUMERIC(9,3),
    DESCRICAO   VARCHAR(50),
    UNIDADE     VARCHAR(3)
);

CREATE TABLE COR (
    COR  VARCHAR(20)
);

CREATE TABLE FLUXO_CAIXA (
    COD           INTEGER NOT NULL,
    HISTORICO     VARCHAR(100),
    NUM_DOC       VARCHAR(100),
    COD_PLANOC    INTEGER,
    BAIXADO       DATE,
    CREDITO       NUMERIC(9,2) DEFAULT 0,
    DEBITO        NUMERIC(9,2) DEFAULT 0,
    RECEBIDO      NUMERIC(9,2) DEFAULT 0,
    PAGO          NUMERIC(9,2) DEFAULT 0,
    COD_FORN      INTEGER DEFAULT 0,
    COD_CLI       INTEGER DEFAULT 0,
    COD_BANCO     INTEGER DEFAULT 0,
    COD_VENDA     INTEGER DEFAULT 0,
    COD_COMPRA    INTEGER DEFAULT 0,
    NF            VARCHAR(50),
    COD_CHEQUE    INTEGER DEFAULT 0,
    DINHEIRO      NUMERIC(9,2) DEFAULT 0,
    CHEQUE        NUMERIC(9,2) DEFAULT 0,
    OUTROS        NUMERIC(9,2) DEFAULT 0,
    COD_FUNC      INTEGER,
    EMIT_SAC      VARCHAR(50),
    EMISSAO       DATE,
    AUTORIZADO    SMALLINT DEFAULT 0,
    VENC          DATE,
    DESC_OUTROS   VARCHAR(20),
    COD_NF        INTEGER default 0,
    STAT          SMALLINT DEFAULT 0,
    DATA_CC       DATE,
    TIPO          VARCHAR(30),
    COD_NF_E      INTEGER,
    COD_CONTA_AB  INTEGER,
    COD_TURNO     INTEGER,
    NOSSO_NUMERO  VARCHAR(15)
);

CREATE TABLE FORNECEDORES (
    COD          INTEGER NOT NULL,
    ENDERECO     ENDERECO,
    COMPLEMENTO  VARCHAR(20),
    BAIRRO       VARCHAR(30),
    CIDADE       VARCHAR(50),
    CEP          CEP,
    UF           VARCHAR(2),
    CPF          CPF,
    RG           RG,
    CNPJ         CNPJ,
    IE           IE,
    U_COMPRA     TIMESTAMP,
    CREDITOS     NUMERIC(8,2) DEFAULT 0,
    DATA_CAD     TIMESTAMP DEFAULT 'NOW',
    EMAIL        VARCHAR(100),
    CONTATO      VARCHAR(50),
    NOME         NOME,
    TEL1         TELEFONE,
    TEL2         TELEFONE,
    TEL3         TELEFONE,
    FIS_JUR      TIPO
);

CREATE TABLE FUNCIONARIOS (
    COD             INTEGER NOT NULL,
    NOME            NOME,
    ENDERECO        ENDERECO,
    COMPLEMENTO     VARCHAR(20),
    BAIRRO          VARCHAR(30),
    CIDADE          VARCHAR(50),
    CEP             CEP,
    UF              VARCHAR(2),
    CPF             CPF,
    RG              RG,
    TEL1            TELEFONE,
    TEL2            TELEFONE,
    TEL3            TELEFONE,
    OBS             BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    DATA_CAD        TIMESTAMP DEFAULT 'NOW',
    TEL_FAX         TELEFONE,
    EMAIL           VARCHAR(100),
    USERNAME        VARCHAR(8),
    PASSW           VARCHAR(8),
    USER_LEVEL      INTEGER default 0,
    BLOQUEADO       INTEGER default 0,
    NATURALID       VARCHAR(40),
    ESTADOC         VARCHAR(30),
    GRAU_INS        VARCHAR(40),
    SALARIO         NUMERIC(8,2),
    DATA_ADM        DATE,
    CTPS            VARCHAR(20),
    SERIE           VARCHAR(10),
    DATA_CTPS       DATE,
    LOCAL_CTPS      VARCHAR(40),
    PIS             VARCHAR(14),
    DATA_PIS        VARCHAR(14),
    LOCAL_PIS       VARCHAR(40),
    CNH             VARCHAR(20),
    DATA_CNH        DATE,
    LOCAL_CNH       VARCHAR(40),
    TITULO_EL       VARCHAR(13),
    DATA_TITULO_E   DATE,
    LOCAL_TITULO_E  VARCHAR(40),
    ZONA_TITULO_E   VARCHAR(3),
    SECAO_TITULO_E  VARCHAR(3),
    CERT_MIL        VARCHAR(14),
    DATA_CERT_MIL   DATE,
    LOCAL_CERT_MIL  VARCHAR(40),
    COR             VARCHAR(20),
    CABELOS         VARCHAR(20),
    ALTURA          VARCHAR(5),
    PESO            VARCHAR(5),
    OLHOS           VARCHAR(20),
    FUNCAO          VARCHAR(30),
    DEP             BLOB SUB_TYPE 0 SEGMENT SIZE 80,
    PAI             VARCHAR(50),
    MAE             VARCHAR(50),
    NASC            DATE
);

CREATE TABLE GRUPOS (
    COD        INTEGER NOT NULL,
    DESCRICAO  VARCHAR(80)
);

CREATE TABLE INVENTARIO (
    MES          SMALLINT,
    ANO          SMALLINT,
    COD_PROD     INTEGER,
    VALOR_CUSTO  NUMERIC(9,2),
    VALOR_VENDA  NUMERIC(9,2),
    QTDE         NUMERIC(9,2),
    DESCRICAO    VARCHAR(50),
    TIPO         SMALLINT
);

CREATE TABLE NOTA_FISCAL (
    CODIGO        INTEGER NOT NULL,
    COD_CLI_FOR   INTEGER NOT NULL,
    ENTRADA       SMALLINT DEFAULT 0,
    SAIDA         SMALLINT DEFAULT 0,
    NATUREZA      VARCHAR(50),
    IE_SUBST      VARCHAR(50),
    DATA_EM       TIMESTAMP,
    HORA_EM       TIMESTAMP,
    DATA_SA_EN    TIMESTAMP,
    HORA_SAIDA    TIMESTAMP,
    VLR_ISS       FLOAT DEFAULT 0,
    PERC_ISS      FLOAT DEFAULT 0,
    IE_DEST       FLOAT DEFAULT 0,
    VLR_SERV      FLOAT DEFAULT 0,
    VLR_PROD      NUMERIC(9,2) DEFAULT 0,
    VLR_NOTA      NUMERIC(9,2) DEFAULT 0,
    OBS_CORPO     BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    OBS_RODAPE    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    COD_TRANSP    INTEGER,
    FRETE_PC      SMALLINT DEFAULT 1,
    PLACA_VEIC    VARCHAR(20),
    UF_VEIC       VARCHAR(2),
    COD_VENDEDOR  INTEGER,
    PESO_BRUTO    FLOAT DEFAULT 0,
    PESO_LIQ      FLOAT DEFAULT 0,
    QTDE          FLOAT DEFAULT 0,
    ESPECIE       VARCHAR(50),
    MARCA         VARCHAR(50),
    NUMERO        VARCHAR(50),
    AL_IRPJ       NUMERIC(9,2),
    VLR_IRPJ      FLOAT,
    CARTA_CORR    INTEGER default 0,
    CANCELADA     SMALLINT default 0,
    VALOR_SERV    NUMERIC(9,2) default 0,
    BC_ICMS       NUMERIC(9,2),
    VLR_ICMS      NUMERIC(9,2),
    BC_ICMS_ST    NUMERIC(9,2),
    VLR_ICMS_ST   NUMERIC(9,2),
    VLR_FRETE     NUMERIC(9,2),
    VLR_SEGURO    NUMERIC(9,2),
    OUTRAS_DESP   NUMERIC(9,2),
    VLR_IPI       NUMERIC(9,2),
    CFOP          VARCHAR(25)
);

CREATE TABLE NOTA_FISCAL_ENTRADA (
    CODIGO          INTEGER NOT NULL,
    COD_FOR         INTEGER NOT NULL,
    DATA_EM         TIMESTAMP,
    HORA_EM         TIMESTAMP,
    DATA_SA_EN      TIMESTAMP,
    HORA_SAIDA      TIMESTAMP,
    VLR_ISS         FLOAT DEFAULT 0,
    PERC_ISS        FLOAT DEFAULT 0,
    IE_DEST         FLOAT DEFAULT 0,
    VLR_SERV        FLOAT DEFAULT 0,
    VLR_PROD        NUMERIC(9,2) DEFAULT 0,
    VLR_NOTA        NUMERIC(9,2) DEFAULT 0,
    OBS_CORPO       BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    AL_IRPJ         NUMERIC(9,2),
    VLR_IRPJ        FLOAT,
    CARTA_CORR      INTEGER default 0,
    CANCELADA       SMALLINT default 0,
    VALOR_SERV      NUMERIC(9,2) default 0,
    BC_ICMS         NUMERIC(9,2),
    VLR_ICMS        NUMERIC(9,2),
    BC_ICMS_ST      NUMERIC(9,2),
    VLR_ICMS_ST     NUMERIC(9,2),
    VLR_FRETE       NUMERIC(9,2),
    VLR_SEGURO      NUMERIC(9,2),
    OUTRAS_DESP     NUMERIC(9,2),
    VLR_IPI         NUMERIC(9,2),
    CFOP            VARCHAR(25),
    NO_NOTA_FISCAL  VARCHAR(10)
);

CREATE TABLE NOTA_FISCAL_ENTRADA_ITENS (
    COD_NF             INTEGER NOT NULL,
    NUM_SEQ            INTEGER,
    QTDE               NUMERIC(9,3) DEFAULT 0,
    VALOR_T            NUMERIC(8,2) DEFAULT 0,
    AL_ICMS            NUMERIC(8,2) DEFAULT 0,
    AL_ISS             NUMERIC(8,2) DEFAULT 0,
    VL_ICMS            NUMERIC(8,2) DEFAULT 0,
    VL_ISS             NUMERIC(8,2) DEFAULT 0,
    CL_FISC            VARCHAR(10),
    SIT_TRIB           VARCHAR(10),
    UNIDADE            VARCHAR(10),
    DESCRICAO          VARCHAR(200),
    COD_PROD           INTEGER,
    LUCRO              NUMERIC(5,2),
    VALOR_VENDA_VISTA  NUMERIC(9,2),
    VALOR_VENDA_PRAZO  NUMERIC(9,2),
    COD_TANQUE         INTEGER,
    VALOR_U            NUMERIC(8,4),
    COD_TABELA_MARGEM  INTEGER,
    COR                VARCHAR(20),
    TAMANHO            VARCHAR(5)
);

CREATE TABLE NOTA_FISCAL_ITENS (
    COD_NF     INTEGER NOT NULL,
    COD_PV     INTEGER DEFAULT 0,
    COD_ORC    INTEGER DEFAULT 0,
    NUM_SEQ    INTEGER,
    QTDE       NUMERIC(9,3) DEFAULT 0,
    VALOR_U    NUMERIC(8,3) DEFAULT 0,
    VALOR_T    NUMERIC(8,2) DEFAULT 0,
    AL_ICMS    NUMERIC(8,2) DEFAULT 0,
    AL_IPI     NUMERIC(8,2) DEFAULT 0,
    AL_ISS     NUMERIC(8,2) DEFAULT 0,
    VL_ICMS    NUMERIC(8,2) DEFAULT 0,
    VL_IPI     NUMERIC(8,2) DEFAULT 0,
    VL_ISS     NUMERIC(8,2) DEFAULT 0,
    CL_FISC    VARCHAR(10),
    SIT_TRIB   VARCHAR(10),
    DESCONTO   NUMERIC(8,2) DEFAULT 0,
    EXPEDICAO  SMALLINT DEFAULT 0,
    DATA_EXP   DATE,
    UNIDADE    VARCHAR(10),
    COMPR      FLOAT default 0,
    LARG       FLOAT default 0,
    ESPESS     FLOAT default 0,
    PESO       FLOAT default 0,
    DESCRICAO  VARCHAR(200),
    COD_PROD   INTEGER
);

CREATE TABLE NOTA_FISCAL_MENSAL (
    COD_PV          INTEGER,
    COD_CLI         INTEGER,
    DIA_VENC        SMALLINT,
    ULTIMA_EMISSAO  DATE,
    COD_OP          INTEGER
);

CREATE TABLE OPERACOES (
    COD                  INTEGER NOT NULL,
    CFOP                 VARCHAR(10) NOT NULL,
    NATUREZA             VARCHAR(50) NOT NULL,
    OBS_ICMS             BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    OBS_IPI              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    ICMS                 SMALLINT DEFAULT 1,
    ISS                  SMALLINT DEFAULT 1,
    ISS_AL               NUMERIC(8,2),
    IPI                  SMALLINT DEFAULT 1,
    IPI_AL               NUMERIC(8,2),
    FRETE                SMALLINT DEFAULT 1,
    IRF                  SMALLINT DEFAULT 0,
    IRF_AL               NUMERIC(9,2) DEFAULT 0,
    IRF_VALOR_LIMITE     NUMERIC(9,2),
    ENTRADA              SMALLINT default 0,
    SAIDA                SMALLINT default 1,
    CONSUMIDOR           SMALLINT default 0,
    CSLL                 SMALLINT DEFAULT 0,
    COFINS               SMALLINT DEFAULT 0,
    PIS                  SMALLINT DEFAULT 0,
    CSLL_AL              NUMERIC(5,2),
    COFINS_AL            NUMERIC(5,2),
    PIS_AL               NUMERIC(5,2),
    CSLL_VALOR_LIMITE    NUMERIC(9,2),
    COFINS_VALOR_LIMITE  NUMERIC(9,2),
    PIS_VALOR_LIMITE     NUMERIC(9,2),
    ECF                  SMALLINT
);

CREATE TABLE ORCAMENTOS (
    COD        INTEGER NOT NULL,
    TIPO       SMALLINT,
    COD_CLI    INTEGER DEFAULT 0,
    COD_FORN   INTEGER,
    COD_FUNC   INTEGER,
    COD_VEND   INTEGER,
    COD_VENDA  INTEGER,
    DATA       DATE,
    SUB_TOTAL  NUMERIC(9,2) DEFAULT 0,
    DESCO      NUMERIC(9,2) DEFAULT 0,
    ACRES      NUMERIC(9,2) DEFAULT 0,
    TOTAL      NUMERIC(9,2) DEFAULT 0,
    OBS        BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    VALIDADE   VARCHAR(50),
    CONDICAO   VARCHAR(50),
    FRETE      VARCHAR(50)
);

CREATE TABLE ORCAMENTOS_ITENS (
    COD_ORC    INTEGER NOT NULL,
    NUM_SEQ    INTEGER,
    QTDE       NUMERIC(9,3) DEFAULT 0,
    VALOR_U    NUMERIC(9,4) DEFAULT 0,
    VALOR_T    NUMERIC(9,2) DEFAULT 0,
    COD_PROD   INTEGER DEFAULT 0,
    DESCONTO   NUMERIC(9,3),
    DESCRICAO  VARCHAR(50),
    UNIDADE    VARCHAR(3),
    COD_FORN   VARCHAR(50)
);

CREATE TABLE ORDEM_SERVICO (
    COD              INTEGER NOT NULL,
    COD_CLI          INTEGER,
    DATA_ENTRADA     DATE,
    DATA_SAIDA       DATE,
    SUB_TOTAL_PECAS  NUMERIC(9,2),
    DESCONTO         NUMERIC(9,2),
    TOTAL_PECAS      NUMERIC(9,2),
    OBS              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    DESC_SERVICOS    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    VALOR_SERVICOS   NUMERIC(9,2),
    TOTAL_GERAL      NUMERIC(9,2)
);

CREATE TABLE ORDEM_SERVICO_PECAS (
    COD_OS     INTEGER,
    NUM_SEQ    INTEGER,
    TIPO       INTEGER,
    COD_PROD   INTEGER,
    DESCRICAO  VARCHAR(50),
    QTDE       NUMERIC(9,2),
    VALOR_U    NUMERIC(9,2),
    VALOR_T    NUMERIC(9,2)
);

CREATE TABLE PARAMETROS (
    EMPRESA           VARCHAR(50),
    ENDERECO          ENDERECO,
    BAIRRO            BAIRRO,
    CIDADE            CIDADE,
    UF                UF,
    CEP               CEP,
    TEL_1             TELEFONE,
    TEL_2             TELEFONE,
    TEL_FAX           TELEFONE,
    EMAIL             VARCHAR(100),
    WWW               VARCHAR(100),
    MENSAGEM          VARCHAR(100),
    CNPJ              CNPJ,
    IE                IE,
    EMAIL_SERVER      VARCHAR(50),
    EMAIL_USER_ID     VARCHAR(50),
    IPI_GLOBAL        NUMERIC(9,2) DEFAULT 0,
    ISS_GLOBAL        NUMERIC(9,2) DEFAULT 0,
    ICMS_GLOBAL       NUMERIC(8,2) default 0,
    CST_GLOBAL        VARCHAR(10),
    SIT_TRIB_GLOBAL   VARCHAR(10),
    UN_GLOBAL         VARCHAR(10),
    CALC_JUROS        SMALLINT,
    JUROS_DIA         NUMERIC(9,2),
    DIAS_ATR          INTEGER,
    PERC_DESC         NUMERIC(9,2),
    MENSAGEM2         VARCHAR(100),
    DIAS_JUROS        SMALLINT,
    TEXTO_SPC         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    QTDE_TURNOS       SMALLINT DEFAULT 1,
    COD_OP_ECF        SMALLINT,
    COD_OP_PADRAO     SMALLINT,
    CANCELA_CUPOM     SMALLINT,
    USA_MATRICIAL     SMALLINT,
    MES_INVENTARIO    SMALLINT,
    ANO_INVENTARIO    SMALLINT,
    IMPRESSORA_JT     VARCHAR(30),
    IMPRESSORA_MT     VARCHAR(30),
    PERC_IMPOSTO      NUMERIC(9,2),
    EMAIL_SENHA       VARCHAR(20),
    EMAIL_TIPO_ANEXO  SMALLINT
);

CREATE TABLE PORTADORES (
    COD          INTEGER NOT NULL,
    NOME         NOME,
    ENDERECO     ENDERECO,
    COMPLEMENTO  VARCHAR(20),
    BAIRRO       VARCHAR(30),
    CIDADE       VARCHAR(50),
    CEP          CEP,
    UF           VARCHAR(2),
    AGENCIA      VARCHAR(15),
    CONTA        VARCHAR(25),
    GERENTE      NOME,
    TEL1         TELEFONE,
    TEL2         TELEFONE,
    TEL3         TELEFONE,
    OBS          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    DATA_CAD     TIMESTAMP DEFAULT 'NOW',
    TEL_FAX      TELEFONE,
    EMAIL        VARCHAR(100)
);

CREATE TABLE PRODUTOS (
    COD                    INTEGER NOT NULL,
    CODIGO_BARRA           VARCHAR(30),
    DESCRICAO              VARCHAR(50),
    QTDE                   NUMERIC(8,2) DEFAULT 0,
    PRECO_CUSTO            NUMERIC(8,4) DEFAULT 0,
    AL_IPI                 NUMERIC(5,2) DEFAULT 0,
    AL_ICMS                NUMERIC(5,2) DEFAULT 0,
    AL_ISS                 NUMERIC(5,2) DEFAULT 0,
    U_VENDA                DATE,
    U_COMPRA               DATE,
    QTDE_MIN               NUMERIC(8,2) DEFAULT 0,
    UNIDADE                VARCHAR(5),
    VERIF_QTDE             SMALLINT DEFAULT 0,
    SALDO                  COMPUTED BY (QTDE_MIN - QTDE),
    CST                    VARCHAR(2),
    NNCM                   VARCHAR(30),
    CLASSF                 VARCHAR(10),
    COD_GRUPO              INTEGER,
    RESERVA                NUMERIC(8,2) DEFAULT 0,
    PRECO_VENDA            NUMERIC(8,2) DEFAULT 0,
    CODIGO_BARRA_PARALELO  VARCHAR(30),
    ESTANTE                VARCHAR(10),
    PRATELEIRA             VARCHAR(10),
    APLICACAO              VARCHAR(100),
    COD_PROD               VARCHAR(50),
    COD_LOCAL              INTEGER DEFAULT 0,
    COD_BARRAS             VARCHAR(50),
    VALOR_VENDA_VISTA      NUMERIC(9,3) DEFAULT 0,
    VALOR_VENDA_PRAZO      NUMERIC(9,3) DEFAULT 0,
    TIPO_TRIBUTACAO        VARCHAR(2),
    ALIQ_ICMS              NUMERIC(4,2) DEFAULT 0,
    ALIQ_IPI               NUMERIC(4,2) DEFAULT 0,
    ALIQ_ISS               NUMERIC(4,2) DEFAULT 0,
    UN                     VARCHAR(2) DEFAULT 'UN',
    COD_FORN               INTEGER,
    SIT_TRIB               VARCHAR(2),
    CLASS_FISCAL           VARCHAR(2),
    NCM                    VARCHAR(15),
    DATA_UV                DATE,
    DATA_UC                DATE,
    TIPO                   SMALLINT DEFAULT 0,
    COMB                   SMALLINT DEFAULT 0,
    TIPO_COMB              SMALLINT DEFAULT 0,
    LUCRO                  NUMERIC(5,2),
    PRAZO_GARANTIA         VARCHAR(20),
    VALOR_CUSTO            NUMERIC(8,4),
    COD_TABELA_MARGEM      INTEGER,
    COR                    VARCHAR(20),
    TAMANHO                VARCHAR(5)
);

CREATE TABLE PRODUTOS_COR_TAM (
    COD_PROD  INTEGER,
    COD_COR   INTEGER,
    COD_TAM   INTEGER,
    QTDE      NUMERIC(8,2)
);

CREATE TABLE TABELA_MARGEM (
    COD           INTEGER NOT NULL,
    DESCRICAO     VARCHAR(20),
    INDICE_VISTA  FLOAT,
    INDICE_PRAZO  FLOAT
);

CREATE TABLE TAMANHO (
    TAMANHO  VARCHAR(5)
);

CREATE TABLE TURNOS (
    COD_TURNO              INTEGER NOT NULL,
    DATA_ABERTURA          DATE DEFAULT 'TODAY',
    DATA_FECHA             DATE DEFAULT 'TODAY',
    VLR_GASOLINA_VENDAS    VALOR DEFAULT 0,
    VLR_ALCOOL_VENDAS      VALOR DEFAULT 0,
    VLR_DIESEL_VENDAS      VALOR DEFAULT 0,
    VLR_GNV_VENDAS         VALOR DEFAULT 0,
    QTDE_GASOLINA_VENDAS   VALOR DEFAULT 0,
    QTDE_ALCOOL_VENDAS     VALOR DEFAULT 0,
    QTDE_DIESEL_VENDAS     VALOR DEFAULT 0,
    QTDE_GNV_VENDAS        VALOR DEFAULT 0,
    VLR_GASOLINA_LEITURA   VALOR DEFAULT 0,
    VLR_ALCOOL_LEITURA     VALOR DEFAULT 0,
    VLR_DIESEL_LEITURA     VALOR DEFAULT 0,
    VLR_GNV_LEITURA        VALOR DEFAULT 0,
    QTDE_GASOLINA_LEITURA  VALOR DEFAULT 0,
    QTDE_ALCOOL_LEITURA    VALOR DEFAULT 0,
    QTDE_DIESEL_LEITURA    VALOR DEFAULT 0,
    QTDE_GNV_LEITURA       VALOR DEFAULT 0,
    TOTAL_DINHEIRO         VALOR DEFAULT 0,
    TOTAL_CHEQUES          VALOR DEFAULT 0,
    TOTAL_CHEQUES_PRE      VALOR DEFAULT 0,
    TOTAL_CARTAO           VALOR DEFAULT 0,
    TOTAL_OUTROS           VALOR DEFAULT 0,
    CAIXA_INICIAL          VALOR DEFAULT 0,
    DEPOSITOS              VALOR DEFAULT 0,
    DESPESAS               VALOR DEFAULT 0,
    COD_FUNC               INTEGER NOT NULL,
    ABERTO                 SMALLINT DEFAULT 1,
    CAIXA_FINAL            VALOR DEFAULT 0,
    VALOR_PRODUTOS_VENDAS  VALOR DEFAULT 0,
    VALOR_SERVICOS_VENDAS  VALOR DEFAULT 0,
    DIF_VALOR_GASOLINA     VALOR,
    DIF_QTDE_GASOLINA      VALOR,
    DIF_VALOR_ALCOOL       VALOR,
    DIF_QTDE_ALCOOL        VALOR,
    DIF_VALOR_DIESEL       VALOR,
    DIF_QTDE_DIESEL        VALOR,
    DIF_VALOR_GNV          VALOR,
    DIF_QTDE_GNV           VALOR,
    NO_TURNO_ATUAL         SMALLINT DEFAULT 1,
    NO_TURNO_TOTAL         SMALLINT DEFAULT 1
);

CREATE TABLE TURNOS_RETIRADAS (
    COD_TURNO  INTEGER NOT NULL,
    VALOR      NUMERIC(9,2),
    DATA       TIMESTAMP
);

CREATE TABLE TURNOS_SUPRIMENTOS (
    COD_TURNO  INTEGER NOT NULL,
    VALOR      NUMERIC(9,2),
    DATA       TIMESTAMP
);

CREATE TABLE VENDAS (
    COD              INTEGER NOT NULL,
    COD_CLI          INTEGER DEFAULT 0,
    COD_FUNC         INTEGER,
    COD_VEND         INTEGER,
    COD_NOTAF        INTEGER,
    DATA             DATE,
    SUB_TOTAL        NUMERIC(9,2) DEFAULT 0,
    DESCO            NUMERIC(9,2) DEFAULT 0,
    ACRES            NUMERIC(9,2) DEFAULT 0,
    TOTAL            NUMERIC(9,2) DEFAULT 0,
    OBS              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    COD_CONTA        INTEGER,
    COD_TURNO        INTEGER,
    CUPOM_ECF        VARCHAR(10) DEFAULT '000000',
    TIPO_VENDA       SMALLINT DEFAULT 0,
    FORMA_PAG        INTEGER DEFAULT 0,
    CANCELADA        SMALLINT DEFAULT 0,
    PLACA            VARCHAR(10),
    NOME_CONSUMIDOR  VARCHAR(50),
    TOTAL_CUSTO      NUMERIC(9,2)
);

CREATE TABLE VENDAS_ITENS (
    COD_VENDA     INTEGER NOT NULL,
    NUM_SEQ       INTEGER,
    QTDE          NUMERIC(9,3) DEFAULT 0,
    VALOR_U       NUMERIC(9,4) DEFAULT 0,
    VALOR_T       NUMERIC(9,2) DEFAULT 0,
    TIPO          VARCHAR(1) default 'P',
    COD_PROD      INTEGER DEFAULT 0,
    COD_PONTO_AB  INTEGER,
    ICMS          NUMERIC(9,3),
    ISS           NUMERIC(9,3),
    DESCONTO      NUMERIC(9,3),
    DESCRICAO     VARCHAR(50),
    UNIDADE       VARCHAR(3),
    VALOR_U_AUX   NUMERIC(9,3),
    DESCONTO_AUX  NUMERIC(9,3),
    COD_TURNO     INTEGER,
    COMB          SMALLINT,
    CUSTO_UN      NUMERIC(9,4),
    CUSTO_TOTAL   NUMERIC(9,2),
    COR           VARCHAR(20),
    TAMANHO       VARCHAR(5)
);

CREATE TABLE VENDEDORES (
    COD          INTEGER NOT NULL,
    NOME         NOME,
    ENDERECO     ENDERECO,
    COMPLEMENTO  VARCHAR(20),
    BAIRRO       VARCHAR(30),
    CIDADE       VARCHAR(50),
    CEP          CEP,
    UF           VARCHAR(2),
    NASC         VARCHAR(10),
    CPF          CPF,
    RG           RG,
    CNPJ         CNPJ,
    IE           IE,
    TEL1         TELEFONE,
    TEL2         TELEFONE,
    TEL3         TELEFONE,
    FIS_JUR      VARCHAR(1),
    OBS          BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    DATA_CAD     TIMESTAMP DEFAULT 'NOW',
    TEL_FAX      TELEFONE,
    EMAIL        VARCHAR(100),
    CONTATO      VARCHAR(50),
    COMISSAO     NUMERIC(8,2)
);



/******************************************************************************/
/***                              Primary Keys                              ***/
/******************************************************************************/

ALTER TABLE CLIENTES ADD PRIMARY KEY (COD);
ALTER TABLE COMPRAS ADD CONSTRAINT PK_COMPRAS PRIMARY KEY (COD);
ALTER TABLE FLUXO_CAIXA ADD PRIMARY KEY (COD);
ALTER TABLE FORNECEDORES ADD PRIMARY KEY (COD);
ALTER TABLE FUNCIONARIOS ADD PRIMARY KEY (COD);
ALTER TABLE GRUPOS ADD PRIMARY KEY (COD);
ALTER TABLE NOTA_FISCAL ADD PRIMARY KEY (CODIGO);
ALTER TABLE NOTA_FISCAL_ENTRADA ADD PRIMARY KEY (CODIGO);
ALTER TABLE OPERACOES ADD PRIMARY KEY (COD);
ALTER TABLE ORCAMENTOS ADD CONSTRAINT PK_ORCAMENTOS PRIMARY KEY (COD);
ALTER TABLE ORDEM_SERVICO ADD CONSTRAINT PK_ORDEM_SERVICO PRIMARY KEY (COD);
ALTER TABLE PORTADORES ADD PRIMARY KEY (COD);
ALTER TABLE PRODUTOS ADD PRIMARY KEY (COD);
ALTER TABLE TABELA_MARGEM ADD CONSTRAINT PK_TABELA_MARGEM PRIMARY KEY (COD);
ALTER TABLE TURNOS ADD PRIMARY KEY (COD_TURNO);
ALTER TABLE VENDAS ADD PRIMARY KEY (COD);
ALTER TABLE VENDEDORES ADD PRIMARY KEY (COD);


/******************************************************************************/
/***                              Foreign Keys                              ***/
/******************************************************************************/

ALTER TABLE COMPRAS_ITENS ADD CONSTRAINT FK_COMPRAS_ITENS FOREIGN KEY (COD_COMPRA) REFERENCES COMPRAS (COD) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ORCAMENTOS_ITENS ADD CONSTRAINT FK_ORCAMENTOS_ITENS FOREIGN KEY (COD_ORC) REFERENCES ORCAMENTOS (COD) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ORDEM_SERVICO_PECAS ADD CONSTRAINT FK_ORDEM_SERVICO_PECAS FOREIGN KEY (COD_OS) REFERENCES ORDEM_SERVICO (COD) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE VENDAS_ITENS ADD FOREIGN KEY (COD_VENDA) REFERENCES VENDAS (COD) ON DELETE CASCADE ON UPDATE CASCADE;


/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/

CREATE INDEX NOMECLI ON CLIENTES (NOME);
CREATE INDEX CODCLIENTE ON FLUXO_CAIXA (COD_CLI);
CREATE INDEX VENCFLUXO ON FLUXO_CAIXA (VENC);
CREATE INDEX NOMEFORN ON FORNECEDORES (NOME);
CREATE INDEX NOMEFUNC ON FUNCIONARIOS (NOME);
CREATE INDEX NOTA_FISCAL_MENSAL_IDX1 ON NOTA_FISCAL_MENSAL (COD_PV);
CREATE INDEX NOTA_FISCAL_MENSAL_IDX2 ON NOTA_FISCAL_MENSAL (DIA_VENC);
CREATE INDEX VENDAS_IDX1 ON VENDAS (COD_CONTA);
CREATE INDEX VENDAS_ITENS_IDX1 ON VENDAS_ITENS (COD_TURNO);
CREATE INDEX VENDAS_ITENS_IDX2 ON VENDAS_ITENS (COD_PROD);
CREATE INDEX VENDAS_ITENS_IDX3 ON VENDAS_ITENS (COD_VENDA);
CREATE INDEX NOMEVEND ON VENDEDORES (NOME);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/


SET TERM ^ ;


/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: CODIGO_CLIENTE */
CREATE TRIGGER CODIGO_CLIENTE FOR CLIENTES
ACTIVE BEFORE INSERT POSITION 0
AS
  BEGIN
          if (NEW.cod <= 0) then NEW.COD = GEN_ID(COD_CLIENTES,1);
          POST_EVENT 'E_CLIENTE';
  END
^

/* Trigger: CODIGO_FORNECEDOR */
CREATE TRIGGER CODIGO_FORNECEDOR FOR FORNECEDORES
ACTIVE BEFORE INSERT POSITION 0
AS
  BEGIN
          if (new.cod <= 0) then NEW.COD = GEN_ID(COD_FORNECEDORES,1);
          POST_EVENT 'E_FORNECEDOR';
  END
^

/* Trigger: CODIGO_FUNCIONARIO */
CREATE TRIGGER CODIGO_FUNCIONARIO FOR FUNCIONARIOS
ACTIVE BEFORE INSERT POSITION 0
AS
  BEGIN
          NEW.COD = GEN_ID(COD_FUNCIONARIOS,1);
          POST_EVENT 'E_FUNCIONARIO';
  END
^

/* Trigger: CODIGO_GRUPO */
CREATE TRIGGER CODIGO_GRUPO FOR GRUPOS
ACTIVE BEFORE INSERT POSITION 0
AS
  BEGIN
          if (new.cod = 0) then NEW.COD = GEN_ID(COD_GRUPO,1);
          POST_EVENT 'E_GRUPO';
  END
^

/* Trigger: CODIGO_OPERACAO */
CREATE TRIGGER CODIGO_OPERACAO FOR OPERACOES
ACTIVE BEFORE INSERT POSITION 0
AS
  BEGIN
          NEW.COD = GEN_ID(COD_OPERACOES,1);
          POST_EVENT 'E_OPERACAO';
  END
^

/* Trigger: CODIGO_PORTADOR */
CREATE TRIGGER CODIGO_PORTADOR FOR PORTADORES
ACTIVE BEFORE INSERT POSITION 0
AS
  BEGIN
          NEW.COD = GEN_ID(COD_PORTADORES,1);
          POST_EVENT 'E_PORTADOR';
  END
^

/* Trigger: CODIGO_VENDEDOR */
CREATE TRIGGER CODIGO_VENDEDOR FOR VENDEDORES
ACTIVE BEFORE INSERT POSITION 0
AS
  BEGIN
          NEW.COD = GEN_ID(COD_VENDEDORES,1);
          POST_EVENT 'E_VENDEDOR';
  END
^

/* Trigger: COD_AUTO_TURNO */
CREATE TRIGGER COD_AUTO_TURNO FOR TURNOS
ACTIVE BEFORE INSERT POSITION 0
AS
declare variable ultimo_turno integer;
declare variable turno_atual integer;
declare variable turno_total integer;
BEGIN
  NEW.COD_TURNO = GEN_ID(COD_TURNO,1);
  SELECT TURNOS.no_turno_atual FROM TURNOS WHERE TURNOS.cod_turno = (SELECT MAX(COD_TURNO) FROM TURNOS WHERE ABERTO = 0) INTO :TURNO_ATUAL;
  SELECT FIRST 1 PARAMETROS.qtde_turnos FROM PARAMETROS INTO :TURNO_TOTAL;
  NEW.no_turno_total = :TURNO_TOTAL;
  if (TURNO_ATUAL = TURNO_TOTAL) then
   BEGIN
    NEW.no_turno_atual = 1;
   END
  ELSE
   BEGIN
    NEW.no_turno_atual = COALESCE(:TURNO_ATUAL,0) + 1;
   END
  POST_EVENT 'E_TURNOS';
END
^

/* Trigger: COD_FLUXO_CAIXA */
CREATE TRIGGER COD_FLUXO_CAIXA FOR FLUXO_CAIXA
ACTIVE BEFORE INSERT POSITION 0
as
  BEGIN
          NEW.COD = GEN_ID(COD_FLUXO_CAIXA,1);
          POST_EVENT 'E_FLUXO_CAIXA';
  END
^

/* Trigger: COD_PRODUTO */
CREATE TRIGGER COD_PRODUTO FOR PRODUTOS
ACTIVE BEFORE INSERT POSITION 0
as
BEGIN
  if (NEW.COD <= 0) then NEW.COD = GEN_ID(COD_PRODUTO,1);
  POST_EVENT 'E_ESTOQUE';
END
^

/* Trigger: NOTA_FISCAL_ENTRADA_ITENS_AI0 */
CREATE TRIGGER NOTA_FISCAL_ENTRADA_ITENS_AI0 FOR NOTA_FISCAL_ENTRADA_ITENS
ACTIVE AFTER INSERT POSITION 0
AS
declare variable COD_FORN INTEGER;
begin
  SELECT NOTA_FISCAL_ENTRADA.cod_for FROM nota_fiscal_entrada WHERE nota_fiscal_entrada.codigo = NEW.cod_nf INTO :COD_FORN;
  UPDATE PRODUTOS SET
  PRODUTOS.aliq_icms = NEW.al_icms,
  PRODUTOS.u_compra = CURRENT_DATE,
  PRODUTOS.class_fiscal = NEW.cl_fisc,
  PRODUTOS.cod_forn = :COD_FORN,
  PRODUTOS.cst = NEW.sit_trib,
  PRODUTOS.qtde = PRODUTOS.qtde + NEW.qtde,
  PRODUTOS.valor_custo = NEW.valor_u,
  produtos.valor_venda_vista = new.valor_venda_vista,
  produtos.valor_venda_prazo = new.valor_venda_prazo,
  produtos.cod_tabela_margem = NEW.cod_tabela_margem,
  produtos.cor = new.cor,
  produtos.tamanho = new.tamanho
  WHERE PRODUTOS.cod = NEW.cod_prod;
end
^

/* Trigger: PRODUTOS_COR_TAM_AD0 */
CREATE TRIGGER PRODUTOS_COR_TAM_AD0 FOR PRODUTOS_COR_TAM
ACTIVE AFTER DELETE POSITION 0
AS
begin
   UPDATE PRODUTOS SET PRODUTOS.qtde = (PRODUTOS.qtde - OLD.qtde) WHERE PRODUTOS.cod = old.cod_prod;
end
^

/* Trigger: PRODUTOS_COR_TAM_AI0 */
CREATE TRIGGER PRODUTOS_COR_TAM_AI0 FOR PRODUTOS_COR_TAM
ACTIVE AFTER INSERT POSITION 0
AS
begin
  UPDATE PRODUTOS SET PRODUTOS.qtde = PRODUTOS.qtde + NEW.qtde WHERE PRODUTOS.cod = NEW.cod_prod;
end
^

/* Trigger: PRODUTOS_COR_TAM_AU0 */
CREATE TRIGGER PRODUTOS_COR_TAM_AU0 FOR PRODUTOS_COR_TAM
ACTIVE AFTER UPDATE POSITION 0
AS
declare variable qtde_nova NUMERIC(9,3);
begin
  if (NEW.qtde <> OLD.qtde) then
  begin
   qtde_nova = OLD.qtde - NEW.qtde;
   UPDATE PRODUTOS SET PRODUTOS.qtde = (PRODUTOS.qtde + :qtde_nova) WHERE PRODUTOS.cod = old.cod_prod;
  end
end
^

/* Trigger: TABELA_MARGEM_AU0 */
CREATE TRIGGER TABELA_MARGEM_AU0 FOR TABELA_MARGEM
ACTIVE AFTER UPDATE POSITION 0
AS
begin
  if (NEW.indice_vista <> OLD.indice_vista) then
    UPDATE PRODUTOS SET PRODUTOS.valor_venda_vista = PRODUTOS.valor_custo / NEW.indice_vista WHERE PRODUTOS.cod_tabela_margem = tabela_margem.cod;
  if (NEW.indice_prazo <> OLD.indice_prazo) then
    UPDATE PRODUTOS SET PRODUTOS.valor_venda_prazo = PRODUTOS.valor_custo / NEW.indice_prazo WHERE PRODUTOS.cod_tabela_margem = tabela_margem.cod;
end
^

/* Trigger: TABELA_MARGEM_BI */
CREATE TRIGGER TABELA_MARGEM_BI FOR TABELA_MARGEM
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  NEW.COD = GEN_ID(GEN_TABELA_MARGEM_ID,1);
END
^

/* Trigger: VENDAS_AU0 */
CREATE TRIGGER VENDAS_AU0 FOR VENDAS
ACTIVE AFTER UPDATE POSITION 0
AS
begin
  if (new.cancelada = 1) then
  begin
   delete from vendas_itens where vendas_itens.cod_venda = vendas.cod;
  end
end
^

/* Trigger: VENDAS_BI0 */
CREATE TRIGGER VENDAS_BI0 FOR VENDAS
ACTIVE BEFORE INSERT POSITION 0
AS
declare variable turno_atual INTEGER;
begin
  SELECT COD_TURNO FROM TURNOS WHERE ABERTO = 1 INTO :TURNO_ATUAL;
   NEW.COD_TURNO = TURNO_ATUAL;
end
^

/* Trigger: VENDAS_BU0 */
CREATE TRIGGER VENDAS_BU0 FOR VENDAS
ACTIVE BEFORE UPDATE POSITION 0
AS
declare variable nome_cliente VARCHAR(50);
begin
  if (OLD.cod_cli <> NEW.cod_cli) then
  BEGIN
   select CLIENTES.nome FROM CLIENTES WHERE CLIENTES.cod = NEW.cod_cli INTO :NOME_CLIENTE;
   update FLUXO_CAIXA SET FLUXO_CAIXA.emit_sac = :nome_cliente WHERE FLUXO_CAIXA.cod_venda = OLD.cod;
  END
end
^

/* Trigger: VENDAS_ITENS_AI0 */
CREATE TRIGGER VENDAS_ITENS_AI0 FOR VENDAS_ITENS
ACTIVE AFTER INSERT POSITION 0
AS
begin
  POST_EVENT 'E_TANQUES';
end
^

/* Trigger: VENDAS_ITENS_BD0 */
CREATE TRIGGER VENDAS_ITENS_BD0 FOR VENDAS_ITENS
ACTIVE BEFORE DELETE POSITION 0
AS
begin
  UPDATE PRODUTOS SET PRODUTOS.qtde = PRODUTOS.qtde + OLD.qtde WHERE PRODUTOS.cod = OLD.cod_prod;
end
^

/* Trigger: VENDAS_ITENS_BI0 */
CREATE TRIGGER VENDAS_ITENS_BI0 FOR VENDAS_ITENS
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  UPDATE PRODUTOS SET PRODUTOS.qtde = (PRODUTOS.qtde - NEW.qtde), PRODUTOS.u_venda = 'TODAY' WHERE PRODUTOS.cod = NEW.cod_prod;
end
^

/* Trigger: VENDAS_ITENS_BU0 */
CREATE TRIGGER VENDAS_ITENS_BU0 FOR VENDAS_ITENS
ACTIVE BEFORE UPDATE POSITION 0
AS
declare variable qtde_nova NUMERIC(9,3);
begin
  if (NEW.qtde <> OLD.qtde) then
  begin
   qtde_nova = OLD.qtde - NEW.qtde;
   UPDATE PRODUTOS SET PRODUTOS.qtde = (PRODUTOS.qtde + :qtde_nova) WHERE PRODUTOS.cod = old.cod_prod;
  end
end
^

SET TERM ; ^



/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/


SET TERM ^ ;

ALTER PROCEDURE CRIAR_INVENTARIO (
    PMES SMALLINT,
    PANO SMALLINT)
AS
DECLARE VARIABLE PCOD_PROD INTEGER;
DECLARE VARIABLE PQTDE NUMERIC(9,2);
DECLARE VARIABLE PCUSTO NUMERIC(9,2);
DECLARE VARIABLE PVENDA NUMERIC(9,2);
DECLARE VARIABLE PDESCRICAO VARCHAR(50);
DECLARE VARIABLE PTIPO SMALLINT;
DECLARE VARIABLE PVMES SMALLINT;
DECLARE VARIABLE PVANO SMALLINT;
begin
  DELETE FROM INVENTARIO WHERE MES = :PMES AND ANO = :PANO;
  FOR SELECT PRODUTOS.cod,PRODUTOS.qtde,PRODUTOS.descricao,PRODUTOS.valor_custo,PRODUTOS.valor_venda_vista,PRODUTOS.comb FROM PRODUTOS WHERE (PRODUTOS.QTDE > 0 AND PRODUTOS.tipo = 0) INTO :PCOD_PROD,:PQTDE,:PDESCRICAO,:PCUSTO,:PVENDA,:PTIPO DO BEGIN
   INSERT INTO INVENTARIO(MES,ANO,COD_PROD,QTDE,VALOR_CUSTO,VALOR_VENDA,DESCRICAO,TIPO) VALUES(:PMES,:PANO,:PCOD_PROD,:PQTDE,:PCUSTO,:PVENDA,:PDESCRICAO,:PTIPO);
  END
  SELECT COALESCE(PARAMETROS.mes_inventario,EXTRACT(MONTH FROM CURRENT_DATE)),COALESCE(PARAMETROS.ano_inventario,EXTRACT(YEAR FROM CURRENT_DATE)) FROM PARAMETROS INTO :PVMES,:PVANO;
  if (:PMES >= :PVMES AND :PANO >= :PVANO) then UPDATE PARAMETROS SET MES_INVENTARIO = :PMES, ANO_INVENTARIO = :PANO;
  suspend;
end
^

ALTER PROCEDURE INSERE_COMPRAS (
    PCOD_FORN INTEGER,
    PCOD_FUNC INTEGER,
    PCOD_NOTAF INTEGER,
    PDATA DATE,
    PSUB_TOTAL NUMERIC(9,2),
    PDESCO NUMERIC(9,2),
    PACRES NUMERIC(9,2),
    PTOTAL NUMERIC(9,2),
    PCOD_COMPRADOR INTEGER,
    PFORMA_PAG VARCHAR(20),
    POBS BLOB SUB_TYPE 1 SEGMENT SIZE 80)
RETURNS (
    RCODIGO INTEGER)
AS
BEGIN
  RCODIGO = GEN_ID(GEN_COMPRAS_ID,1);
  INSERT INTO COMPRAS (
    COD,
    COD_FORN,
    COD_FUNC,
    COD_NOTAF,
    DATA,
    SUB_TOTAL,
    DESCO,
    ACRES,
    TOTAL,
    COD_COMPRADOR,
    FORMA_PAG,
    OBS)
  VALUES (
    :RCODIGO,
    :PCOD_FORN,
    :PCOD_FUNC,
    :PCOD_NOTAF,
    :PDATA,
    :PSUB_TOTAL,
    :PDESCO,
    :PACRES,
    :PTOTAL,
    :PCOD_COMPRADOR,
    :PFORMA_PAG,
    :POBS);
END
^

ALTER PROCEDURE INSERE_NOTA_FISCAL (
    PCOD_CLI_FOR INTEGER,
    PSAIDA SMALLINT,
    PCFOP VARCHAR(25),
    PNATUREZA VARCHAR(50),
    PDATA_EM TIMESTAMP,
    PHORA_EM TIMESTAMP,
    PDATA_SA_EN TIMESTAMP,
    PHORA_SAIDA TIMESTAMP,
    PVLR_ISS FLOAT,
    PPERC_ISS FLOAT,
    PVLR_SERV FLOAT,
    PBC_ICMS FLOAT,
    PVLR_ICMS FLOAT,
    PBC_ICMS_ST FLOAT,
    PVLR_ICMS_ST FLOAT,
    PVLR_PROD NUMERIC(9,2),
    PVLR_FRETE FLOAT,
    PVLR_SEGURO FLOAT,
    POUTRAS_DESP FLOAT,
    PVLR_IPI FLOAT,
    PVLR_IRPJ FLOAT,
    PAL_IRPJ NUMERIC(9,2),
    PVLR_NOTA NUMERIC(9,2),
    POBS_CORPO BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    POBS_RODAPE BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    PCOD_TRANSP INTEGER,
    PFRETE_PC SMALLINT,
    PPLACA_VEIC VARCHAR(20),
    PUF_VEIC VARCHAR(2),
    PCOD_VENDEDOR INTEGER,
    PPESO_BRUTO FLOAT,
    PPESO_LIQ FLOAT,
    PQTDE FLOAT,
    PESPECIE VARCHAR(50),
    PMARCA VARCHAR(50),
    PNUMERO VARCHAR(50))
RETURNS (
    RCODIGO INTEGER)
AS
BEGIN
   RCODIGO = GEN_ID(COD_NOTAFISCAL,1);
   INSERT INTO NOTA_FISCAL(CODIGO,COD_CLI_FOR,SAIDA,CFOP,NATUREZA,DATA_EM,HORA_EM,DATA_SA_EN,
                          HORA_SAIDA,VLR_ISS,PERC_ISS,VLR_SERV,BC_ICMS,VLR_ICMS,BC_ICMS_ST,VLR_ICMS_ST,VLR_PROD,
                          VLR_FRETE,VLR_SEGURO,OUTRAS_DESP,VLR_IPI,VLR_NOTA,OBS_CORPO,OBS_RODAPE,COD_TRANSP,FRETE_PC,
                          PLACA_VEIC,UF_VEIC,COD_VENDEDOR,PESO_BRUTO,PESO_LIQ,QTDE,ESPECIE,MARCA,NUMERO,AL_IRPJ,VLR_IRPJ)
                   VALUES(:RCODIGO,:PCOD_CLI_FOR,:PSAIDA,:PCFOP,:PNATUREZA,:PDATA_EM,:PHORA_EM,:PDATA_SA_EN,
                          :PHORA_SAIDA,:PVLR_ISS,:PPERC_ISS,:PVLR_SERV,:PBC_ICMS,:PVLR_ICMS,:PBC_ICMS_ST,:PVLR_ICMS_ST,:PVLR_PROD,
                          :PVLR_FRETE,:PVLR_SEGURO,:POUTRAS_DESP,:PVLR_IPI,:PVLR_NOTA,:POBS_CORPO,:POBS_RODAPE,:PCOD_TRANSP,:PFRETE_PC,
                          :PPLACA_VEIC,:PUF_VEIC,:PCOD_VENDEDOR,:PPESO_BRUTO,:PPESO_LIQ,:PQTDE,:PESPECIE,:PMARCA,:PNUMERO,:PAL_IRPJ,:PVLR_IRPJ);
  POST_EVENT 'E_NOTA_FISCAL';
  EXIT;
END
^

ALTER PROCEDURE INSERE_NOTA_FISCAL_ENTRADA (
    PCOD_FOR INTEGER,
    PDATA_EM DATE,
    PHORA_EM TIME,
    PDATA_SA_EN DATE,
    PHORA_SAIDA TIME,
    PVLR_ISS FLOAT,
    PPERC_ISS FLOAT,
    PIE_DEST FLOAT,
    PVLR_SERV FLOAT,
    PVLR_PROD NUMERIC(9,2),
    PVLR_NOTA NUMERIC(9,2),
    PAL_IRPJ NUMERIC(9,2),
    PVLR_IRPJ FLOAT,
    PCARTA_CORR INTEGER,
    PCANCELADA SMALLINT,
    PVALOR_SERV NUMERIC(9,2),
    PBC_ICMS NUMERIC(9,2),
    PVLR_ICMS NUMERIC(9,2),
    PBC_ICMS_ST NUMERIC(9,2),
    PVLR_ICMS_ST NUMERIC(9,2),
    PVLR_FRETE NUMERIC(9,2),
    PVLR_SEGURO NUMERIC(9,2),
    POUTRAS_DESP NUMERIC(9,2),
    PVLR_IPI NUMERIC(9,2),
    PCFOP VARCHAR(25),
    PNO_NOTA_FISCAL VARCHAR(10))
RETURNS (
    RCODIGO INTEGER)
AS
BEGIN
   RCODIGO = GEN_ID(COD_NOTAFISCAL_ENTRADA,1);
   INSERT INTO NOTA_FISCAL_ENTRADA (
    CODIGO,
    COD_FOR,
    DATA_EM,
    HORA_EM,
    DATA_SA_EN,
    HORA_SAIDA,
    VLR_ISS,
    PERC_ISS,
    IE_DEST,
    VLR_SERV,
    VLR_PROD,
    VLR_NOTA,
    AL_IRPJ,
    VLR_IRPJ,
    CARTA_CORR,
    CANCELADA,
    VALOR_SERV,
    BC_ICMS,
    VLR_ICMS,
    BC_ICMS_ST,
    VLR_ICMS_ST,
    VLR_FRETE,
    VLR_SEGURO,
    OUTRAS_DESP,
    VLR_IPI,
    CFOP,
    NO_NOTA_FISCAL)
  VALUES (
    :RCODIGO,
    :PCOD_FOR,
    :PDATA_EM,
    :PHORA_EM,
    :PDATA_SA_EN,
    :PHORA_SAIDA,
    :PVLR_ISS,
    :PPERC_ISS,
    :PIE_DEST,
    :PVLR_SERV,
    :PVLR_PROD,
    :PVLR_NOTA,
    :PAL_IRPJ,
    :PVLR_IRPJ,
    :PCARTA_CORR,
    :PCANCELADA,
    :PVALOR_SERV,
    :PBC_ICMS,
    :PVLR_ICMS,
    :PBC_ICMS_ST,
    :PVLR_ICMS_ST,
    :PVLR_FRETE,
    :PVLR_SEGURO,
    :POUTRAS_DESP,
    :PVLR_IPI,
    :PCFOP,
    :PNO_NOTA_FISCAL);
  POST_EVENT 'E_NOTA_FISCAL_ENTRADA';
  EXIT;
END
^

ALTER PROCEDURE INSERE_ORCAMENTOS (
    PTIPO SMALLINT,
    PCOD_CLI INTEGER,
    PCOD_FORN INTEGER,
    PCOD_FUNC INTEGER,
    PCOD_VEND INTEGER,
    PCOD_VENDA INTEGER,
    PDATA DATE,
    PSUB_TOTAL NUMERIC(9,2),
    PDESCO NUMERIC(9,2),
    PACRES NUMERIC(9,2),
    PTOTAL NUMERIC(9,2),
    POBS BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    PVALIDADE VARCHAR(50),
    PCONDICAO VARCHAR(50),
    PFRETE VARCHAR(50))
RETURNS (
    RCODIGO INTEGER)
AS
BEGIN
  RCODIGO = GEN_ID(GEN_ORCAMENTOS_ID,1);
  INSERT INTO ORCAMENTOS (
    COD,
    TIPO,
    COD_CLI,
    COD_FORN,
    COD_FUNC,
    COD_VEND,
    COD_VENDA,
    DATA,
    SUB_TOTAL,
    DESCO,
    ACRES,
    TOTAL,
    OBS,
    VALIDADE,
    CONDICAO,
    FRETE)
  VALUES (
    :RCODIGO,
    :PTIPO,
    :PCOD_CLI,
    :PCOD_FORN,
    :PCOD_FUNC,
    :PCOD_VEND,
    :PCOD_VENDA,
    :PDATA,
    :PSUB_TOTAL,
    :PDESCO,
    :PACRES,
    :PTOTAL,
    :POBS,
    :PVALIDADE,
    :PCONDICAO,
    :PFRETE);
END
^

ALTER PROCEDURE INSERE_VENDA (
    PCOD_CLI INTEGER,
    PDATA TIMESTAMP,
    PSUB_TOT NUMERIC(9,2),
    PDESCO NUMERIC(9,2),
    PACRES NUMERIC(9,2),
    PTOTAL NUMERIC(9,2),
    PCOD_FUNC INTEGER,
    PCOD_VEND INTEGER,
    PCUPOM_ECF INTEGER,
    PTIPO SMALLINT,
    PFORMA_PAG SMALLINT,
    PTOTAL_CUSTO NUMERIC(9,2),
    POBS BLOB SUB_TYPE 1 SEGMENT SIZE 80)
RETURNS (
    RCODIGO INTEGER)
AS
BEGIN
  RCODIGO = GEN_ID(COD_VENDA,1);
  INSERT INTO VENDAS(COD,COD_CLI,DATA,SUB_TOTAL,DESCO,ACRES,TOTAL,COD_FUNC,COD_VEND,CUPOM_ECF,TIPO_VENDA,FORMA_PAG,TOTAL_CUSTO,OBS)
  VALUES(:RCODIGO,:PCOD_CLI,:PDATA,:PSUB_TOT,:PDESCO,:PACRES,:PTOTAL,:PCOD_FUNC,:PCOD_VEND,:PCUPOM_ECF,:PTIPO,:PFORMA_PAG,:PTOTAL_CUSTO,:POBS);
  POST_EVENT 'E_VENDA';
  EXIT;
END
^


SET TERM ; ^
